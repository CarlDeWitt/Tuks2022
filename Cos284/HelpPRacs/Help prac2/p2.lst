     1                                 %line 1+1 p2.asm
     2                                 [segment .data]
     3                                 
     4 00000000 596F75722062616C61-    statement: dw "Your balance is", 0x0a
     5 00000000 6E6365206973000A00 
     6                                 statement_length: equ $-statement
     7 00000012 0A00                   input: dw "", 0x0a
     8                                 input_lenght: equ $-input
     9 00000014 5C6E0A00               nextLine: dw "\n", 0x0a
    10                                 nextLine_lenght: equ $-nextLine
    11 00000018 31300000000000000A-    balance: dq "10", 0x0a
    12 00000018 00000000000000     
    13                                 balance_length: equ $-balance
    14                                 
    15                                 [section .text]
    16                                 
    17                                 output:
    18 00000000 B801000000             mov eax, 1
    19 00000005 BF01000000             mov edi, 1
    20 0000000A BA04000000             mov edx, nextLine_lenght
    21 0000000F 488D3425[00000000]     lea rsi, [nextLine]
    22                                 
    23                                 
    24 00000017 B801000000             mov eax, 1
    25 0000001C BF01000000             mov edi, 1
    26 00000021 BA12000000             mov edx, statement_length
    27 00000026 488D3425[00000000]     lea rsi, [statement]
    28 0000002E 0F05                   syscall
    29                                 
    30 00000030 B801000000             mov eax, 1
    31 00000035 BF01000000             mov edi, 1
    32 0000003A BA10000000             mov edx, balance_length
    33 0000003F 488D3425[00000000]     lea rsi, [balance]
    34 00000047 0F05                   syscall
    35 00000049 C3                     ret
    36                                 
    37                                 inputcall:
    38                                 
    39 0000004A 48C7C000000000         mov rax,0
    40 00000051 48C7C700000000         mov rdi,0
    41 00000058 48C7C200000000         mov rdx, 0
    42 0000005F 48C7C600000000         mov rsi, 0
    43 00000066 0F05                   syscall
    44                                 
    45 00000068 48C7C000000000         mov rax,0
    46 0000006F 48C7C700000000         mov rdi,0
    47 00000076 48BA02000000000000-    mov rdx, input_lenght
    48 00000076 00                 
    49 00000080 48C7C6[00000000]       mov rsi, input
    50 00000087 0F05                   syscall
    51                                 
    52                                 
    53 00000089 B801000000             mov eax, 1
    54 0000008E BF01000000             mov edi, 1
    55 00000093 BA02000000             mov edx, input_lenght
    56 00000098 488D3425[00000000]     lea rsi, [input]
    57 000000A0 0F05                   syscall
    58                                 
    59                                 
    60                                 
    61                                 [global _start]
    62                                 _start:
    63                                 
    64                                 
    65                                 
    66                                 
    67                                 
    68                                 
    69                                 exit:
    70 000000A2 B83C000000              mov eax, 60
    71 000000A7 31FF                    xor edi, edi
    72 000000A9 0F05                    syscall
